<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3c.org/TR/1999/REC-html401-19991224/loose.dtd">
<!-- saved from url=(0119)http://192.168.100.16/wiki/doku.php -->
<HTML dir=ltr lang=en xml:lang="en" 
xmlns="http://www.w3.org/1999/xhtml"><HEAD><TITLE>egovframework:dev:imp:editor:dbio_editor:sql_map_editor</TITLE>
<META content="text/html; charset=utf-8" http-equiv=Content-Type>
<META name=GENERATOR content="MSHTML 8.00.6001.18702">
<META name=robots content=noindex,nofollow>
<META name=date content=2009-05-11T16:52:00+0900>
<META name=keywords 
content=egovframework,dev,imp,editor,dbio_editor,sql_map_editor><LINK 
title=eGovFrame rel=search type=application/opensearchdescription+xml 
href="/wiki/lib/exe/opensearch.php"><LINK rel=start href="/wiki/"><LINK 
title=Index rel=contents 
href="/wiki/doku.php?id=egovframework:dev:imp:editor:dbio_editor:sql_map_editor&amp;do=index"><LINK 
title="Recent Changes" rel=alternate type=application/rss+xml 
href="/wiki/feed.php"><LINK title="Current Namespace" rel=alternate 
type=application/rss+xml 
href="/wiki/feed.php?mode=list&amp;ns=egovframework:dev:imp:editor:dbio_editor"><LINK 
title="Plain HTML" rel=alternate type=text/html 
href="/wiki/doku.php?do=export_xhtml&amp;id=egovframework:dev:imp:editor:dbio_editor:sql_map_editor"><LINK 
title="Wiki Markup" rel=alternate type=text/plain 
href="/wiki/doku.php?do=export_raw&amp;id=egovframework:dev:imp:editor:dbio_editor:sql_map_editor"><LINK 
rel=stylesheet type=text/css 
href="egovframeworkdevimpeditordbio_editorsql_map_editor_files/css.php" 
media=all><LINK rel=stylesheet type=text/css 
href="egovframeworkdevimpeditordbio_editorsql_map_editor_files/css(1).php" 
media=screen><LINK rel=stylesheet type=text/css 
href="egovframeworkdevimpeditordbio_editorsql_map_editor_files/css(2).php" 
media=print>
<SCRIPT type=text/javascript charset=utf-8 
src="egovframeworkdevimpeditordbio_editorsql_map_editor_files/js.php"></SCRIPT>
</HEAD>
<BODY>
<DIV class="dokuwiki export"><!-- TOC START -->
<DIV class=toc>
<DIV id=toc__header class="tocheader toctoggle">Table of Contents</DIV>
<DIV id=toc__inside>
<UL class=toc>
  <LI class=level1>
  <DIV class=li><SPAN class=li><A class=toc 
  href="#sqlmap_editor">SQLMap 
  Editor</A></SPAN></DIV>
  <UL class=toc>
    <LI class=level2>
    <DIV class=li><SPAN class=li><A class=toc 
    href="#개요">개요</A></SPAN></DIV></LI>
    <LI class=level2>
    <DIV class=li><SPAN class=li><A class=toc 
    href="#설명">설명</A></SPAN></DIV>
    <UL class=toc>
      <LI class=level3>
      <DIV class=li><SPAN class=li><A class=toc 
      href="#화면">화면</A></SPAN></DIV></LI>
      <LI class=level3>
      <DIV class=li><SPAN class=li><A class=toc 
      href="#주요기능">주요기능</A></SPAN></DIV></LI></UL></LI>
    <LI class=level2>
    <DIV class=li><SPAN class=li><A class=toc 
    href="#사용법">사용법</A></SPAN></DIV>
    <UL class=toc>
      <LI class=level3>
      <DIV class=li><SPAN class=li><A class=toc 
      href="#sqlmap_file_새로_만들기">SqlMap 
      File 새로 만들기</A></SPAN></DIV></LI>
      <LI class=level3>
      <DIV class=li><SPAN class=li><A class=toc 
      href="#sqlmap_editor_열기">SqlMap 
      Editor 열기</A></SPAN></DIV></LI>
      <LI class=level3>
      <DIV class=li><SPAN class=li><A class=toc 
      href="#신규_query_map의_작성">신규 
      Query Map의 작성</A></SPAN></DIV></LI>
      <LI class=level3>
      <DIV class=li><SPAN class=li><A class=toc 
      href="#query_builder_사용하기">Query 
      Builder 사용하기</A></SPAN></DIV></LI>
      <LI class=level3>
      <DIV class=li><SPAN class=li><A class=toc 
      href="#작성한_쿼리_테스트하기">작성한 
      쿼리 테스트하기</A></SPAN></DIV></LI>
      <LI class=level3>
      <DIV class=li><SPAN class=li><A class=toc 
      href="#신규_parametermap_생성">신규 
      ParameterMap 생성</A></SPAN></DIV></LI>
      <LI class=level3>
      <DIV class=li><SPAN class=li><A class=toc 
      href="#신규_resultmap_생성">신규 
      ResultMap 생성</A></SPAN></DIV></LI>
      <LI class=level3>
      <DIV class=li><SPAN class=li><A class=toc 
      href="#alias_설정하기">Alias 
      설정하기</A></SPAN></DIV></LI>
      <LI class=level3>
      <DIV class=li><SPAN class=li><A class=toc 
      href="#sqlmap.xml_소스_직접_수정하기">SqlMap.XML 
      소스 직접 수정하기</A></SPAN></DIV></LI></UL></LI></UL></LI></UL></DIV></DIV><!-- TOC END -->
<H1><A id=sqlmap_editor name=sqlmap_editor>SQLMap Editor</A></H1>
<DIV class=level1></DIV><!-- SECTION "SQLMap Editor" [1-29] -->
<H2><A id=개요 name=개요>개요</A></H2>
<DIV class=level2>
<P>SQLMap Editor는 <ACRONYM title="Structured Query Language">SQL</ACRONYM> Map 
File 을 쉽고 편리하게 편집할 수 있도록 지원하는 개발도구이다. 사용자는 <ACRONYM 
title="Extensible Markup Language">XML</ACRONYM> 문법을 잘 알지 못해도 SQLMap Editor의 
Form UI를 사용하여 쉽게 <ACRONYM title="Structured Query Language">SQL</ACRONYM> Map 
File을 작성할 수 있다. 또한 SQLMap Editor는 <ACRONYM 
title="Extensible Markup Language">XML</ACRONYM> 작성시에 사용자가 범할 수 있는 오타로 인한 오작동을 
최소화할 수 있다. SQLMap Editor의 주요기능은 다음과 같다. </P>
<UL>
  <LI class=level1>
  <DIV class=li>CRUD Query의 추가/수정/삭제 </DIV></LI>
  <LI class=level1>
  <DIV class=li>Query Builder 기능 </DIV></LI>
  <LI class=level1>
  <DIV class=li>Query Test 기능 </DIV></LI>
  <LI class=level1>
  <DIV class=li>ParameterMap 설정</DIV></LI>
  <LI class=level1>
  <DIV class=li>ResultMap 설정</DIV></LI>
  <LI class=level1>
  <DIV class=li>Alias 설정</DIV></LI>
  <LI class=level1>
  <DIV class=li>각 그룹별 ID 중복체크 기능</DIV></LI>
  <LI class=level1>
  <DIV class=li>Outline을 통한 각 그룹별 ID 바로가기 기능</DIV></LI>
  <LI class=level1>
  <DIV class=li>Custom Layout 조정 기능 </DIV></LI></UL></DIV><!-- SECTION "개요" [30-759] -->
<H2><A id=설명 name=설명>설명</A></H2>
<DIV class=level2></DIV><!-- SECTION "설명" [760-779] -->
<H3><A id=화면 name=화면>화면</A></H3>
<DIV class=level3>
<P><A class=media 
title=egovframework:dev:imp:editor:dbio_editor:sqlmapeditor.jpg 
><IMG 
class=media alt="" 
src="egovframeworkdevimpeditordbio_editorsql_map_editor_files/sqlmapeditor.jpg" 
width=770 height=600></A> <BR><SUP>&lt;그림 1&gt; <ACRONYM 
title="Structured Query Language">SQL</ACRONYM> Map Editor 의 화면 구성 </SUP></P>
<P>① SqlMap Namespace, 그룹별 구성요소 Tree 편집 화면 <BR>② SqlMap 내에 속한 Query, 
ParameterMap, ResultMap, Alias 등 각 구성요소에 대한 편집 화면, 구성요소별 편집화면이 다르다. <BR>③ 사용자 
LayOut 조정 기능 (Horizontal, Vertical 선택) <BR>④ SqlMap 구성 Outline <BR>⑤ Query 
Result View 화면, Query Test 결과를 보여준다. <BR>⑥ SqlMap 파일을 수정할 때 사용자는 Form UI 를 사용할 
것인지 <ACRONYM title="Extensible Markup Language">XML</ACRONYM> 소스를 직접 수정할 것인지 선택할 
수 있다. </P></DIV><!-- SECTION "화면" [780-1468] -->
<H3><A id=주요기능 name=주요기능>주요기능</A></H3>
<DIV class=level3></DIV>
<H4><A id=sqlmap_tree name=sqlmap_tree>SQLMap Tree</A></H4>
<DIV class=level4>
<P>SQLMap Editor에서는 SQLMap 파일 내에 있는 Query, ParameterMap, ResultMap, Alias 그룹에 대한 
각 구성요소를 Tree 형태로 표현하여 사용자가 SQLMap 구성을 쉽게 이해할 수 있도록 도와준다. (&lt;그림 1&gt; ① 참조) 또한 
SQLMap Tree는 각 구성요소를 쉽게 접근하여 추가, 수정, 삭제 등의 작업을 수월하게 할 수 있도록 도와준다. </P></DIV>
<H4><A id=crud_query_작성 name=crud_query_작성>CRUD Query 작성</A></H4>
<DIV class=level4>
<P>SQLMap 파일은 쿼리 매핑 구문에 따라 그에 관련된 <ACRONYM 
title="Extensible Markup Language">XML</ACRONYM> 요소가 다르다(&lt;표 1&gt; 참조). 
<ACRONYM title="Structured Query Language">SQL</ACRONYM> Map Editor는 해당 구문타입 속성에 
적합한 편집화면을 제공하므로 편리하게 작성할 수 있다. (&lt;그림 1&gt; ② 참조) </P>
<TABLE class=inline>
  <TBODY>
  <TR class=row0>
    <TH class=col0>구문타입 </TH>
    <TH class=col1>속성 </TH>
    <TH class=col2>설명 </TH></TR>
  <TR class=row1>
    <TD class=col0>select </TD>
    <TD class=col1>id, parameterClass,resultClass, parameterMap, resultMap </TD>
    <TD class=col2>데이터 조회 </TD></TR>
  <TR class=row2>
    <TD class=col0>insert </TD>
    <TD class=col1>id, parameterClass,parameterMap </TD>
    <TD class=col2>데이터 입력 </TD></TR>
  <TR class=row3>
    <TD class=col0>update </TD>
    <TD class=col1>id, parameterClass,parameterMap </TD>
    <TD class=col2>데이터 수정 </TD></TR>
  <TR class=row4>
    <TD class=col0>delete </TD>
    <TD class=col1>id, parameterClass,parameterMap </TD>
    <TD class=col2>데이터 삭제 </TD></TR></TBODY></TABLE>
<P><SUP>&lt;표 1&gt; 쿼리 매핑구문의 타입과 그에 관련된 <ACRONYM 
title="Extensible Markup Language">XML</ACRONYM> 요소 </SUP></P>
<P>Query 편집화면은 In/Out, Query, Test 탭으로 구분된다. </P></DIV>
<H5><A id=in_out name=in_out>In/Out</A></H5>
<DIV class=level5>
<P>Query에 사용될 Parameter, Result 를 작성한다. Parameter나 Result는 둘 다 Class 또는 
ParameterMap 중 하나를 선택하여 지정할 수 있다. Result는 select Query 인 경우에만, 해당한다. 만약, 사용자가 
Alias 를 사전에 생성한 경우 Class 선택항목에 Alias 항목도 별도로 추가되어 나타난다. </P></DIV>
<H5><A id=query name=query>Query</A></H5>
<DIV class=level5>
<P>Query ID 를 변경하거나, Query 내용을 편집하고, Query Test 에 필요한 데이타베이스 접속 정보를 선택할 수 있다. 
</P></DIV>
<H5><A id=test name=test>Test</A></H5>
<DIV class=level5>
<P>Query 에 대한 Binding Variable 값을 지정하거나 입력하고, 해당 쿼리를 Test할 수 있다. Row Limit 값을 
입력하면 Query Result View 에 조회되는 결과 행수를 제한할 수 있다. </P></DIV>
<H4><A id=query_builder_기능 name=query_builder_기능>Query Builder 기능</A></H4>
<DIV class=level4>
<P>SQLMap Editor는 Query Builder 기능을 제공하기 때문에, 사용자가 쿼리를 작성할 때, 별도의 Database 
Client 를 사용하여 테이블명과 컬럼명을 확인할 필요가 없다. <ACRONYM 
title="Structured Query Language">SQL</ACRONYM> Map Editor의 Query Builder 는 
Database 내의 Table List, Column Name 등을 조회, 확인할 수 있도록 해줄 뿐 아니라 단순 쿼리의 경우 자동생성 
기능으로 신속하게 쿼리를 작성할 수 있다. 물론, 별도의 쿼리 테스트 기능을 가지고 있지만, 단순쿼리의 경우 Query Builder 상에서도 
쿼리 결과를 확인할 수 있다. </P></DIV>
<H4><A id=query_test_기능 name=query_test_기능>Query Test 기능</A></H4>
<DIV class=level4>
<P>사용자는 단순 Query 외에도 Parameters 를 적용하여 복잡한 쿼리를 작성할 가능성이 높다. 해당 쿼리에 대해서는 먼저 Query 
Test를 통해 Query에 대한 Validation이 이루어져야 할 것이다. <ACRONYM 
title="Structured Query Language">SQL</ACRONYM> Map Editor는 쿼리 테스트 기능을 통해 Query에 
대한 Validation 을 제공한다. </P></DIV>
<H4><A id=parametermap_작성 name=parametermap_작성>ParameterMap 작성</A></H4>
<DIV class=level4>
<P>사용자는 <ACRONYM title="Structured Query Language">SQL</ACRONYM> Map Editor의 
Form UI를 통해 쉽게 ParameterMap을 작성할 수 있다. id와 class 속성 외의 항목은 Property 목록에 사용자가 
프로젝트에 맞게 개별적으로 추가할 수 있다. 사용자가 정의한 parameterMap 요소는 CRUD Query 의 Parameter를 지정할 때 
활용할 수 있다. </P></DIV>
<H4><A id=resultmap_작성 name=resultmap_작성>ResultMap 작성</A></H4>
<DIV class=level4>
<P>ResultMap은 <ACRONYM title="Structured Query Language">SQL</ACRONYM> Map 파일의 
구성요소 중 &lt;resultMap&gt; 요소에 해당한다. <ACRONYM 
title="Structured Query Language">SQL</ACRONYM> Map Editor의 Form UI를 통해 
&lt;resultMap&gt; 요소를 쉽게 작성할 수 있다. ParameterMap과 마찬가지로 id와 class 속성 외의 항목은 
Property 목록에 사용자가 프로젝트에 맞게 개별적으로 추가할 수 있다. 사용자가 정의한 resultMap 요소는 select Query 의 
Result 를 지정할 때 활용할 수 있다. </P></DIV>
<H4><A id=alias_작성 name=alias_작성>Alias 작성</A></H4>
<DIV class=level4>
<P>Alias 는 SQLMap <ACRONYM title="Extensible Markup Language">XML</ACRONYM> 구성요소 
중 &lt;typeAlias&gt; 에 해당한다. &lt;typeAlias&gt; 요소는 클래스에 대한 별칭을 지정한다. Alias를 적절히 
활용하면 parameter나 result를 지정할 때 자주 사용되는 특정 클래스를 일일이 찾지 않아도 쉽고 빠르게 지정할 수 있다. 
</P></DIV>
<H4><A id=각_그룹별_id_중복체크_기능 name=각_그룹별_id_중복체크_기능>각 그룹별 ID 중복체크 기능</A></H4>
<DIV class=level4>
<P>사용자가 다수의 SQLMap 구성요소를 작성하고 편집하는 과정에서 구성요소의 ID가 중복될 경우 작성된 SQLMap이 오작동할 가능성이 
높다. SQLMap Editor는 사용자가 각 그룹별 구성요소를 추가/수정/삭제할 때, ID 중복체크를 자동으로 처리한다. ID가 중복되었거나 
공백인 경우 경고메시지를 보여줌으로써 사용자의 실수를 미연에 방지할 수 있다. </P></DIV>
<H4><A id=custom_layout_조정_기능 name=custom_layout_조정_기능>Custom Layout 조정 
기능</A></H4>
<DIV class=level4>
<P>사용자 작성의 편이성을 고려하여 SQLMap Editor는 Horizontal, Vertical 2가지의 화면 Layout을 제공한다. 
사용자가 적절히 선택해서 사용하면 된다. (&lt;그림 1&gt; ③ 참조) </P></DIV>
<H4><A id=sqlmap_outline name=sqlmap_outline>SQLMap Outline</A></H4>
<DIV class=level4>
<P>SqlMap Editor는 사용자가 <ACRONYM title="Extensible Markup Language">XML</ACRONYM> 
소스를 직접 수정할 때, SqlMap Outline View 를 제공하여 현재 작성중인 SQLMap 구성에 대한 이해를 도와준다. SqlMap 
Outline에서 특정 구성요소를 클릭할 경우 해당 구성요소의 편집화면으로 이동한다. (&lt;그림 1&gt; ④ 참조) </P></DIV><!-- SECTION "주요기능" [1469-6648] -->
<H2><A id=사용법 name=사용법>사용법</A></H2>
<DIV class=level2></DIV><!-- SECTION "사용법" [6649-6671] -->
<H3><A id=sqlmap_file_새로_만들기 name=sqlmap_file_새로_만들기>SqlMap File 새로 만들기</A></H3>
<DIV class=level3>
<OL>
  <LI class=level1>
  <DIV class=li>상단 메뉴의 <SUP><A id=fnt__1 class=fn_top 
  href="#fn__1" 
  name=fnt__1>1)</A></SUP> eGovFramework → Implementation → New <ACRONYM 
  title="Structured Query Language">SQL</ACRONYM> Map 또는 Context Menu의 New → 
  sqlMap 를 통해 파일을 생성한다. (&lt;그림 2&gt; 과 &lt;그림 3&gt; 참조)</DIV></LI>
  <LI class=level1>
  <DIV class=li>SqlMapConfig 파일이 위치할 폴더를 선택하고 파일명을 입력한다.(&lt;그림 4&gt; 참조) 
  </DIV></LI></OL>
<P><A class=media 
title=egovframework:dev:imp:editor:dbio_editor:sqlmapeditor_newfile.png 
><IMG 
class=media alt="" 
src="egovframeworkdevimpeditordbio_editorsql_map_editor_files/sqlmapeditor_newfile.png"></A> 
<BR><SUP>&lt;그림 2&gt; <ACRONYM title="Structured Query Language">SQL</ACRONYM> 
Map 파일의 생성방법1 </SUP></P>
<P><A class=media 
title=egovframework:dev:imp:editor:dbio_editor:sqlmapeditor_newfile2.png 
><IMG 
class=media alt="" 
src="egovframeworkdevimpeditordbio_editorsql_map_editor_files/sqlmapeditor_newfile2.png" 
width=600 height=400></A> <BR><SUP>&lt;그림 3&gt; <ACRONYM 
title="Structured Query Language">SQL</ACRONYM> Map 파일의 생성방법2 </SUP></P>
<P><A class=media 
title=egovframework:dev:imp:editor:dbio_editor:sqlmapeditor_newfile3.png 
><IMG 
class=media alt="" 
src="egovframeworkdevimpeditordbio_editorsql_map_editor_files/sqlmapeditor_newfile3.png"></A> 
<BR><SUP>&lt;그림 4&gt; <ACRONYM title="Structured Query Language">SQL</ACRONYM> 
Map 파일의 생성3 </SUP></P></DIV><!-- SECTION "SqlMap File 새로 만들기" [6672-7484] -->
<H3><A id=sqlmap_editor_열기 name=sqlmap_editor_열기>SqlMap Editor 열기</A></H3>
<DIV class=level3>
<P>Pakage Explorer 에서 해당 <ACRONYM 
title="Structured Query Language">SQL</ACRONYM> Map File을 선택하고 더블클릭하거나 열기를 누르면 
자동으로 <ACRONYM title="Structured Query Language">SQL</ACRONYM> Map Editor로 열리게 
된다. 단, <ACRONYM title="Structured Query Language">SQL</ACRONYM> Map file에 이상이 
있거나, 다른 이유로 <ACRONYM title="Structured Query Language">SQL</ACRONYM> Map Editor 
로 열리지 않을 때에는 context menu 의 open with 기능을 사용하여 editor 를 <ACRONYM 
title="Structured Query Language">SQL</ACRONYM> Map Editor로 선택해야 한다. (&lt;그림 
5&gt; 참조) </P>
<P><A class=media 
title=egovframework:dev:imp:editor:dbio_editor:sqlmapeditor_open.png 
><IMG 
class=media alt="" 
src="egovframeworkdevimpeditordbio_editorsql_map_editor_files/sqlmapeditor_open.png"></A> 
<BR><SUP>&lt;그림 5&gt; <ACRONYM title="Structured Query Language">SQL</ACRONYM> 
Map Editor 로 열리지 않는 경우 </SUP></P></DIV><!-- SECTION "SqlMap Editor 열기" [7485-8035] -->
<H3><A id=신규_query_map의_작성 name=신규_query_map의_작성>신규 Query Map의 작성</A></H3>
<DIV class=level3>
<OL>
  <LI class=level1>
  <DIV class=li>SqlMap Editor 화면 중 좌측 <SUP><A id=fnt__2 class=fn_top 
  href="#fn__2" 
  name=fnt__2>2)</A></SUP> 에 있는 SQLMap Tree 에서 마우스 오른쪽 키를 누르면 context menu 가 
  나타난다 (&lt;그림 6&gt; 참조).</DIV></LI>
  <LI class=level1>
  <DIV class=li>context menu 에서 “Add XXX Query” 를 선택한다.(단, 
  Select/Insert/Update/Delete 속성에 따라 적합한 쿼리 생성을 선택한다.)</DIV></LI>
  <LI class=level1>
  <DIV class=li>신규로 생성한 Query 속성에 따른 편집화면이 SQLMap Tree 우측에 나타난다.</DIV></LI>
  <LI class=level1>
  <DIV class=li>In/Out 탭에서 Parameter의 Map 또는 Class 를 선택한 후 적절한 항목을 선택한다. <BR>라디오 
  버튼을 사용하여 Map 또는 Class 방식을 선택하면 선택한 방식에 따라서 Map 또는 Class 입력항목이 활성화되거나 비활성화된다. 
  <BR>또한, 특정 클래스에 대하여 사전에 정의된 Alias 가 있는 경우 Class 입력항목에 Alias 도 함께 포함되어 
  나타난다(&lt;그림 7&gt; 참조).</DIV></LI></OL>
<OL>
  <LI class=level1>
  <DIV class=li>Select Query의 경우 In/Out 탭에 Result 항목이 추가되어 나타나므로 Parameter 항목과 
  동일한 방법으로 Result 항목을 입력한다. </DIV></LI>
  <LI class=level1>
  <DIV class=li>Query 탭에서 Query ID를 수정하거나, 쿼리를 작성할 수 있다(&lt;그림 8&gt; 참조). Query 
  작성이 어려운 경우에는 Query Builder를 사용하면 보다 쉽게 Query 를 작성할 수 있다. 단, Query Builder를 
  사용하려면 먼저 적절한 데이타베이스 연결을 선택해야 하는 데, 데이타베이스 연결을 미리 설정하지 않은 경우 데이타베이스 연결을 선택할 수 
  없다. 데이타베이스 연결 설정은 Data source explorer 를 사용하여 설정할 수 있다.</DIV></LI></OL>
<P>. </P>
<P><A class=media 
title=egovframework:dev:imp:editor:dbio_editor:sqlmapeditor_contextmenu.png 
><IMG 
class=media alt="" 
src="egovframeworkdevimpeditordbio_editorsql_map_editor_files/sqlmapeditor_contextmenu.png"></A> 
<BR><SUP>&lt;그림 6&gt; <ACRONYM title="Structured Query Language">SQL</ACRONYM> 
Map Tree의 Context menu </SUP></P>
<P><A class=media 
title=egovframework:dev:imp:editor:dbio_editor:sqlmapeditor_inout.png 
><IMG 
class=media alt="" 
src="egovframeworkdevimpeditordbio_editorsql_map_editor_files/sqlmapeditor_inout.png"></A> 
<BR><SUP>&lt;그림 7&gt; QueryMap 의 In/Out 설정</SUP> </P>
<P><A class=media 
title=egovframework:dev:imp:editor:dbio_editor:sqlmapeditor_querytab.png 
><IMG 
class=media alt="" 
src="egovframeworkdevimpeditordbio_editorsql_map_editor_files/sqlmapeditor_querytab.png"></A> 
<BR><SUP>&lt;그림 8&gt; <ACRONYM title="Structured Query Language">SQL</ACRONYM> 
Map Editor의 기본 Query 편집화면 </SUP></P></DIV><!-- SECTION "신규 Query Map의 작성" [8036-10248] -->
<H3><A id=query_builder_사용하기 name=query_builder_사용하기>Query Builder 사용하기</A></H3>
<DIV class=level3>
<OL>
  <LI class=level1>
  <DIV class=li>SqlMap Editor의 Query 편집화면에서 Query 탭에는 Query Builder 기능을 내장하고 있다. 
  </DIV></LI>
  <LI class=level1>
  <DIV class=li>Query Builder를 사용하기 위해 먼저 “DB Info*:” 항목에서 적절한 데이타베이스 연결을 선택한다. 
  항목이 보이지 않는 경우 데이타베이스 연결을 미리 설정하지 않은 경우이다. </DIV></LI>
  <LI class=level1>
  <DIV class=li>“DB Info*:” 항목 우측에 있는 “Open Query Builder”를 클릭하면 <ACRONYM 
  title="Structured Query Language">SQL</ACRONYM> Query Builder 화면이 오픈된다. Query 
  Builder의 세부 사용법은 다음과 같다. </DIV></LI></OL></DIV>
<H4><A id=query_builder name=query_builder>Query Builder</A></H4>
<DIV class=level4>
<P><A class=media 
title=egovframework:dev:imp:editor:dbio_editor:sqlmapeditor_querybuilder.png 
><IMG 
class=media alt="" 
src="egovframeworkdevimpeditordbio_editorsql_map_editor_files/sqlmapeditor_querybuilder.png" 
width=800 height=500></A> <BR><SUP>&lt;그림 9&gt; <ACRONYM 
title="Structured Query Language">SQL</ACRONYM> Map Editor의 Query Builder 실행화면 
</SUP></P></DIV>
<H5><A id=사용할_테이블_추가하기 name=사용할_테이블_추가하기>사용할 테이블 추가하기</A></H5>
<DIV class=level5>
<OL>
  <LI class=level1>
  <DIV class=li>테이블 조회 화면에서 마우스 오른쪽 버튼을 클릭하면 “Add Table…” 메뉴가 나타난다. </DIV></LI>
  <LI class=level1>
  <DIV class=li>“Add Table…” 메뉴를 선택하면 “Add Table” 다이어로그 창이 오픈된다. </DIV></LI>
  <LI class=level1>
  <DIV class=li>“Add Table” 다이어로그 창에서 사용할 Table 또는 View 를 선택한다. </DIV></LI>
  <LI class=level1>
  <DIV class=li>“Add Table” 다이어로그 창에 있는 “Table Alias” 입력 항목을 통해 Table Alias를 지정할 
  수 있다. </DIV></LI>
  <LI class=level1>
  <DIV class=li>“OK” 를 클릭하면 테이블 조회 화면에 해당 테이블의 스키마가 나타나고, Query Builder의 쿼리 
  편집화면에 해당 테이블이 추가된다. </DIV></LI></OL></DIV>
<H5><A id=테이블간_join하기 name=테이블간_join하기>테이블간 JOIN하기</A></H5>
<DIV class=level5>
<OL>
  <LI class=level1>
  <DIV class=li>테이블 조회 화면에 둘 이상의 테이블을 추가한다. </DIV></LI>
  <LI class=level1>
  <DIV class=li>JOIN할 컬럼을 클릭하고 대상 컬럼에 드래그하면 선이 연결되면서 Query Builder의 쿼리 편집화면에 
  JOIN 구문이 추가된다. </DIV></LI>
  <LI class=level1>
  <DIV class=li>JOIN을 나타내는 LINE 상에서 마우스 오른쪽키를 누르면 JOIN TYPE 을 지정할 수도 있다. 
  </DIV></LI></OL></DIV>
<H5><A id=조회할_컬럼_지정하기 name=조회할_컬럼_지정하기>조회할 컬럼 지정하기</A></H5>
<DIV class=level5>
<OL>
  <LI class=level1>
  <DIV class=li>Query Builder에서 SELECT 쿼리의 초기 상태는 특정 컬럼이 명시되어 있지 않은 “SELECT * 
  FROM” 이다. </DIV></LI>
  <LI class=level1>
  <DIV class=li>테이블 조회 화면에 추가된 테이블 내에는 조회/사용 가능한 컬럼명이 명시되어 있다. </DIV></LI>
  <LI class=level1>
  <DIV class=li>마우스를 사용하여 컬럼명 좌측에 있는 CHECK BOX 를 클릭하면 특정 컬럼의 조회 여부를 결정할 수 있다. 
  </DIV></LI>
  <LI class=level1>
  <DIV class=li>조회할 컬럼명에 ALIAS 를 적용하기 위해서는 Query Builder 하단에 있는 columns 탭을 활용하여 
  Column Alias 를 입력할 수 있다. </DIV></LI></OL></DIV>
<H5><A id=where_조건절_만들기 name=where_조건절_만들기>Where 조건절 만들기</A></H5>
<DIV class=level5>
<OL>
  <LI class=level1>
  <DIV class=li>Select Query 에서 Where 조건절을 만들기 위해서는 Query Builder 하단에 있는 
  Conditions 탭을 사용한다. </DIV></LI>
  <LI class=level1>
  <DIV class=li>column 항목에 기준 컬럼명을 선택하고 Operator 와 Value 값을 지정하면 where 조건절을 생성할 
  수 있다. </DIV></LI>
  <LI class=level1>
  <DIV class=li>하나 이상의 where 조건절을 사용하는 경우 AND/OR 을 선택하여 조건절을 결합할 수 있다. 
  </DIV></LI></OL></DIV>
<H5><A id=group_by_절_만들기 name=group_by_절_만들기>Group By 절 만들기</A></H5>
<DIV class=level5>
<OL>
  <LI class=level1>
  <DIV class=li>Query Builder에서 Group By 절을 생성하기 위해서는 Query Builder 하단에 있는 
  Groups 탭을 사용하면 된다. </DIV></LI>
  <LI class=level1>
  <DIV class=li>Groups 탭 오른쪽에 있는 Grouping 할 Column 항목을 적절히 선택한다. </DIV></LI>
  <LI class=level1>
  <DIV class=li>Group By 절에서 Having 조건을 사용하기 원할 때는 Group Conditions 탭을 사용하면 된다. 
  Group Conditions의 사용법은 Conditions의 사용법과 같다. </DIV></LI></OL></DIV>
<H5><A id=union_절_만들기 name=union_절_만들기>Union 절 만들기</A></H5>
<DIV class=level5>
<OL>
  <LI class=level1>
  <DIV class=li>Union 절을 생성하려면 Query Builder 중앙 우측에 있는 Query Tree 를 사용하면 된다. 
  </DIV></LI>
  <LI class=level1>
  <DIV class=li>Query Tree 에서 마우스 오른쪽 키를 클릭하면 context menu 가 나타난다.</DIV></LI>
  <LI class=level1>
  <DIV class=li>context menu 중 Conveert to FULLSELECT (UNION) 메뉴를 선택하면 작성한 쿼리에 
  UNION 이 추가되고, Query Tree 도 확장된다. </DIV></LI></OL></DIV>
<H5><A id=쿼리_실행하기 name=쿼리_실행하기>쿼리 실행하기</A></H5>
<DIV class=level5>
<OL>
  <LI class=level1>
  <DIV class=li>작성한 쿼리는 Query Builder 내에서도 결과 조회가 가능하다. Query 에 대한 결과 조회를 하려면 
  Query Builder상단에 있는 쿼리편집기를 사용한다. </DIV></LI>
  <LI class=level1>
  <DIV class=li>쿼리편집기 화면에서 마우스 오른쪽 키를 누르면 context menu 가 나타난다.</DIV></LI>
  <LI class=level1>
  <DIV class=li>context menu 중에서 Run <ACRONYM 
  title="Structured Query Language">SQL</ACRONYM> 메뉴를 선택한다. </DIV></LI>
  <LI class=level1>
  <DIV class=li>Query Builder 내에 있는 “<ACRONYM 
  title="Structured Query Language">SQL</ACRONYM> Result” 탭으로 이동하면서 쿼리 수행결과를 
  보여준다. </DIV></LI></OL></DIV>
<H5><A id=기타_기능 name=기타_기능>기타 기능</A></H5>
<DIV class=level5>
<UL>
  <LI class=level1>
  <DIV class=li>여기에 기술된 기능외에도 Query Builder는 사용자가 쿼리를 쉽고 편리하게 작성할 수 있도록 많은 기능을 
  제공한다. </DIV></LI></UL></DIV><!-- SECTION "Query Builder 사용하기" [10249-14485] -->
<H3><A id=작성한_쿼리_테스트하기 name=작성한_쿼리_테스트하기>작성한 쿼리 테스트하기</A></H3>
<DIV class=level3>
<OL>
  <LI class=level1>
  <DIV class=li>직성한 쿼리를 테스트하기 위해서는 Database 연결 설정이 먼저 요구된다. Database 연결 설정은 
  “DBIO:Database 연결 설정” 도움말을 참고한다.</DIV></LI>
  <LI class=level1>
  <DIV class=li>쿼리를 작성한 후 SqlMap Editor의 Query 탭 상단에 있는 “DB Info*:” 항목에서 적절한 
  데이타베이스 연결이 선택되었는 지 확인한다. </DIV></LI>
  <LI class=level1>
  <DIV class=li>쿼리 내에 variable을 사용한 경우 SqlMap Editor의 Test 탭에서 Binding Variables 
  값을 입력해 주어야 한다. 쿼리 내의 variable 은 # 또는 $ 을 사용하여 지정할 수 있다. (컬럼명href="#변수명# 또는 
  컬럼명=$변수명$).</DIV></LI>
  <LI class=level1>
  <DIV class=li>SqlMap Editor의 Test 탭에서 “Binding Variables” 목록 우측에 있는 “Set 
  Param” 버튼을 누르면 쿼리에서 사용한 변수명이 자동으로 Parameter 항목에 추가된다. </DIV></LI>
  <LI class=level1>
  <DIV class=li>“Binding Variables” 목록에 나열된 Parameter별로 적절한 테스트 value 값을 
  입력한다(&lt;그림 10&gt; 참조). </DIV></LI>
  <LI class=level1>
  <DIV class=li>SqlMap Editor의 Test 탭에서 “Binding Variables” 목록 우측에 있는 “Test 
  Query” 버튼을 누르면 하단에 Result View 가 자동으로 보이면서 쿼리결과를 보여준다(&lt;그림 11&gt; 참조). 
  </DIV></LI>
  <LI class=level1>
  <DIV class=li>“Binding Variables” 목록 우측에 있는 Row Limit 항목을 사용하여 결과 행수를 제한할 수도 
  있다. </DIV></LI></OL>
<P><A class=media 
title=egovframework:dev:imp:editor:dbio_editor:sqlmapeditor_querytest.png 
><IMG 
class=media alt="" 
src="egovframeworkdevimpeditordbio_editorsql_map_editor_files/sqlmapeditor_querytest.png"></A> 
<BR><SUP>&lt;그림 10&gt; <ACRONYM title="Structured Query Language">SQL</ACRONYM> 
Map Editor의 Query Test 화면 </SUP></P>
<P><A class=media 
title=egovframework:dev:imp:editor:dbio_editor:sqlmapeditor_queryresult.png 
><IMG 
class=media alt="" 
src="egovframeworkdevimpeditordbio_editorsql_map_editor_files/sqlmapeditor_queryresult.png"></A> 
<BR><SUP>&lt;그림 11&gt; <ACRONYM title="Structured Query Language">SQL</ACRONYM> 
Map Editor의 Query Test 결과 화면 </SUP></P></DIV><!-- SECTION "작성한 쿼리 테스트하기" [14486-16104] -->
<H3><A id=신규_parametermap_생성 name=신규_parametermap_생성>신규 ParameterMap 생성</A></H3>
<DIV class=level3>
<OL>
  <LI class=level1>
  <DIV class=li>SqlMap Editor 화면 중 좌측에 있는 SQLMap Tree 에서 마우스 오른쪽 키를 누르면 context 
  menu 가 나타난다.</DIV></LI>
  <LI class=level1>
  <DIV class=li>context menu 에서 “Add ParameterMap” 을 선택한다.</DIV></LI>
  <LI class=level1>
  <DIV class=li>신규로 생성한 ParameterMap 편집화면이 SQLMap Tree 우측에 나타난다(&lt;그림 12&gt; 
  참조). </DIV></LI>
  <LI class=level1>
  <DIV class=li>ParameterMap ID를 수정하거나,ParameterMap Class를 지정할 수 있다. 
  ParameterMap Class 가 기본형인 경우 선택항목에서 선택이 가능하다. 기본형이 아닌 경우 “Browse” 버튼을 사용하여 해당 
  클래스를 검색할 수 있으며 기존에 없는 경우에는 “Class *” 를 눌러 신규로 클래스를 생성해야 한다. </DIV></LI>
  <LI class=level1>
  <DIV class=li>Property를 추가하려면 Property 목록 우측에 있는 “Add”버튼을 사용하여 추가 Property 값을 
  입력할 수 있다. </DIV></LI>
  <LI class=level1>
  <DIV class=li>Property를 삭제하려면 Property 목록에서 삭제할 Property 항목을 선택하고 우측에 있는 
  “Remove”버튼을 사용하여 삭제한다. </DIV></LI></OL>
<P><A class=media 
title=egovframework:dev:imp:editor:dbio_editor:sqlmapeditor_parameter.png 
><IMG 
class=media alt="" 
src="egovframeworkdevimpeditordbio_editorsql_map_editor_files/sqlmapeditor_parameter.png"></A> 
<BR><SUP>&lt;그림 12&gt; <ACRONYM title="Structured Query Language">SQL</ACRONYM> 
Map Editor의 ParameterMap 작성화면 </SUP></P></DIV><!-- SECTION "신규 ParameterMap 생성" [16105-17264] -->
<H3><A id=신규_resultmap_생성 name=신규_resultmap_생성>신규 ResultMap 생성</A></H3>
<DIV class=level3>
<OL>
  <LI class=level1>
  <DIV class=li>SqlMap Editor 화면 중 좌측에 있는 SQLMap Tree 에서 마우스 오른쪽 키를 누르면 context 
  menu 가 나타난다.</DIV></LI>
  <LI class=level1>
  <DIV class=li>context menu 에서 “Add ResultMap” 을 선택한다.</DIV></LI>
  <LI class=level1>
  <DIV class=li>신규로 생성한 ResultMap 편집화면이 SQLMap Tree 우측에 나타난다(&lt;그림 13&gt; 참조). 
  </DIV></LI>
  <LI class=level1>
  <DIV class=li>ResultMap ID를 수정하거나,ResultMap Class를 지정할 수 있다. ResultMapClass 가 
  기본형인 경우 선택항목에서 선택이 가능하다. 기본형이 아닌 경우 “Browse” 버튼을 사용하여 해당 클래스를 검색할 수 있으며 기존에 없는 
  경우에는 “Class *” 를 눌러 신규로 클래스를 생성해야 한다. </DIV></LI>
  <LI class=level1>
  <DIV class=li>Property를 추가하려면 Property 목록 우측에 있는 “Add”버튼을 사용하여 추가 Property 값을 
  입력할 수 있다. </DIV></LI>
  <LI class=level1>
  <DIV class=li>Property를 삭제하려면 Property 목록에서 삭제할 Property 항목을 선택하고 우측에 있는 
  “Remove”버튼을 사용하여 삭제한다. </DIV></LI></OL>
<P><A class=media 
title=egovframework:dev:imp:editor:dbio_editor:sqlmapeditor_result.png 
><IMG 
class=media alt="" 
src="egovframeworkdevimpeditordbio_editorsql_map_editor_files/sqlmapeditor_result.png"></A> 
<BR><SUP>&lt;그림 13&gt; <ACRONYM title="Structured Query Language">SQL</ACRONYM> 
Map Editor의 ResultMap 작성화면 </SUP></P></DIV><!-- SECTION "신규 ResultMap 생성" [17265-18400] -->
<H3><A id=alias_설정하기 name=alias_설정하기>Alias 설정하기</A></H3>
<DIV class=level3>
<OL>
  <LI class=level1>
  <DIV class=li>SqlMap Editor 화면 중 좌측에 있는 SQLMap Tree 에서 마우스 오른쪽 키를 누르면 context 
  menu 가 나타난다.</DIV></LI>
  <LI class=level1>
  <DIV class=li>context menu 에서 “Add Alias” 을 선택한다.</DIV></LI>
  <LI class=level1>
  <DIV class=li>신규로 생성한 Alias 편집화면이 SQLMap Tree 우측에 나타난다(&lt;그림 14&gt; 참조). 
  </DIV></LI>
  <LI class=level1>
  <DIV class=li>Alias 이름을 수정하거나,Alias를 적용할 Class를 지정할 수 있다. Class 가 기본형인 경우 
  선택항목에서 선택이 가능하다. 기본형이 아닌 경우 “Browse” 버튼을 사용하여 해당 클래스를 검색할 수 있으며 기존에 없는 경우에는 
  “Class *” 를 눌러 신규로 클래스를 생성해야 한다. </DIV></LI></OL>
<P><A class=media 
title=egovframework:dev:imp:editor:dbio_editor:sqlmapeditor_alias.png 
><IMG 
class=media alt="" 
src="egovframeworkdevimpeditordbio_editorsql_map_editor_files/sqlmapeditor_alias.png"></A> 
<BR><SUP>&lt;그림 14&gt; <ACRONYM title="Structured Query Language">SQL</ACRONYM> 
Map Editor의 Alias 작성화면 </SUP></P></DIV><!-- SECTION "Alias 설정하기" [18401-19219] -->
<H3><A id=sqlmap.xml_소스_직접_수정하기 name=sqlmap.xml_소스_직접_수정하기>SqlMap.XML 소스 직접 
수정하기</A></H3>
<DIV class=level3>
<OL>
  <LI class=level1>
  <DIV class=li>SqlMap Editor 하단에 있는 “<ACRONYM 
  title="Structured Query Language">SQL</ACRONYM> Map” 탭 오른쪽에 있는 “화일명.<ACRONYM 
  title="Extensible Markup Language">XML</ACRONYM>” 탭을 클릭하면 사용자가 <ACRONYM 
  title="Extensible Markup Language">XML</ACRONYM> 소스를 직접 수정할 수 있다. </DIV></LI>
  <LI class=level1>
  <DIV class=li>이 경우 SqlMap Outline 이 자동으로 Open 되면서 현재 작성중인 SqlMap Tree를 보여주어 
  사용자의 <ACRONYM title="Extensible Markup Language">XML</ACRONYM> 작성을 도와준다(&lt;그림 
  15&gt; 참조). </DIV></LI></OL>
<P><A class=media 
title=egovframework:dev:imp:editor:dbio_editor:sqlmapeditor_xmlsource.png 
><IMG 
class=media alt="" 
src="egovframeworkdevimpeditordbio_editorsql_map_editor_files/sqlmapeditor_xmlsource.png"></A> 
<BR><SUP>&lt;그림 15&gt; <ACRONYM title="Structured Query Language">SQL</ACRONYM> 
Map Editor의 <ACRONYM title="Extensible Markup Language">XML</ACRONYM> Source 편집 
</SUP></P></DIV><!-- SECTION "SqlMap.XML 소스 직접 수정하기" [19220-] -->
<DIV class=footnotes>
<DIV class=fn><SUP><A id=fn__1 class=fn_bot 
href="#fnt__1" 
name=fn__1>1)</A></SUP> “eGovFramework” 메뉴는 eGovFramework Perspective 환경에서만 
나타난다.</DIV>
<DIV class=fn><SUP><A id=fn__2 class=fn_bot 
href="#fnt__2" 
name=fn__2>2)</A></SUP> SqlMap Editor 편집화면 LayOut 은 사용자의 선택에 따라 Horizontal, 
Vertical 등으로 바뀔 수 있다. 하지만, 여기서는 초기상태는 Vertical Layout 상태를 가정하고 
설명한다.</DIV></DIV></DIV></BODY></HTML>
