##
#set($voPackage="${voPackage}")
#set($voClassName="${model.entity.pcName}VO")
#set($defaultVoClassName="${model.entity.pcName}DefaultVO")
#set($voInstanceName="${model.entity.ccName}VO")
#set($servicePackage="${servicePackage}")
#set($serviceClassName="${model.entity.pcName}Service")
#set($serviceName="${model.entity.ccName}Service")
#set($serviceInstanceName="${model.entity.ccName}Service")
#set($controllerPackage="${controllerPackage}")
#set($controllerClassName="${model.entity.pcName}Controller")
#set($controllerInstanceName="${model.entity.ccName}Controller")
##
##
#set($listInstanceName="${model.entity.ccName}List")
#set($insertMethodName="insert${model.entity.pcName}")
#set($updateMethodName="update${model.entity.pcName}")
#set($deleteMethodName="delete${model.entity.pcName}")
#set($selectMethodName="select${model.entity.pcName}")
#set($selectListMethodName="select${model.entity.pcName}List")
#set($selectListTotCntMethodName="select${model.entity.pcName}ListTotCnt")
##
##
#set($updateViewMethodName="update${model.entity.pcName}View")
#set($addMethodName="add${model.entity.pcName}")
#set($addViewMethodName="add${model.entity.pcName}View")
##
#set( $topLevelPath = "$model.topLevelPackage.replaceAll('\.', '/')" )
#set( $prefixPath = "/$topLevelPath/$model.middleLevelPackage" )
##
#set($listPath="$prefixPath/${model.entity.packageName}/select${model.entity.pcName}List.do")
#set($addViewPath="$prefixPath/${model.entity.packageName}/add${model.entity.pcName}View.do")
#set($addPath="$prefixPath/${model.entity.packageName}/add${model.entity.pcName}.do")
#set($selectPath="$prefixPath/${model.entity.packageName}/select${model.entity.pcName}.do")
#set($updatePath="$prefixPath/${model.entity.packageName}/update${model.entity.pcName}.do")
#set($updateViewPath="$prefixPath/${model.entity.packageName}/update${model.entity.pcName}View.do")
#set($deletePath="$prefixPath/${model.entity.packageName}/delete${model.entity.pcName}.do")
##
#set( $prefixView = "$topLevelPath/$model.middleLevelPackage" )
##
#set($listView="$prefixView/${model.entity.packageName}/${model.entity.pcName}List")
#set($registerView="$prefixView/${model.entity.packageName}/${model.entity.pcName}Regist")
##
##
package ${controllerPackage};

import egovframework.rte.fdl.property.EgovPropertyService;
import egovframework.rte.psl.dataaccess.util.EgovMap;
import egovframework.rte.ptl.mvc.tags.ui.pagination.PaginationInfo;
#if (${servicePackage}=='${servicePackage}')
// Servoce 객체에 대한 import 구문
// import (service package).${serviceClassName};
#else
import ${servicePackage}.${serviceClassName};
#end
#if (${voPackage}=='${voPackage}')
// Vo 객체에 대한 import 구문
// import (vo package).${defaultVoClassName};
// import (vo package).${voClassName};
#else
##import ${voPackage}.${defaultVoClassName};
import ${voPackage}.${voClassName};
#end

import java.util.List;

import javax.annotation.Resource;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
##import org.springframework.web.bind.annotation.RequestParam;
##import org.springframework.web.bind.annotation.SessionAttributes;
import org.springframework.web.bind.support.SessionStatus;

/**
 * @Class Name : ${controllerClassName}.java
 * @Description : ${model.entity.pcName} Controller class
 * @Modification Information
 *
 * @author ${author}
 * @since ${createDate}
 * @version 1.0
 * @see
 *  
 *  Copyright (C)  All right reserved.
 */

@Controller("${model.codeGenPackage.webPackage}.${controllerInstanceName}")
public class ${controllerClassName} {

	@Resource(name = "${model.codeGenPackage.serviceImplPackage}.${serviceName}")
	private ${serviceClassName} ${serviceInstanceName};

	@Resource(name = "propertiesService")
	protected EgovPropertyService egovPropertyService;

	/**
	 * ${model.entity.tableComments}(${model.entity.tableName}) 목록을 조회한다. (pageing)
	 * @param ${voInstanceName} - 조회할 정보가 담긴 ${voClassName}
	 * @return "${listView}"
	 * @exception Exception
	 */
	@RequestMapping(value = "${listPath}")
	public String ${selectListMethodName}(@ModelAttribute("searchVO") ${voClassName} ${voInstanceName}, ModelMap model) throws Exception {
		${voInstanceName}.setPageUnit(egovPropertyService.getInt("pageUnit"));
		${voInstanceName}.setPageSize(egovPropertyService.getInt("pageSize"));
		
		PaginationInfo paginationInfo = new PaginationInfo();
		paginationInfo.setCurrentPageNo(${voInstanceName}.getPageIndex());
		paginationInfo.setRecordCountPerPage(${voInstanceName}.getPageUnit());
		paginationInfo.setPageSize(${voInstanceName}.getPageSize());
		
		${voInstanceName}.setFirstIndex(paginationInfo.getFirstRecordIndex());
		${voInstanceName}.setLastIndex(paginationInfo.getLastRecordIndex());
		${voInstanceName}.setRecordCountPerPage(paginationInfo.getRecordCountPerPage());
		
		List<EgovMap> items = ${serviceInstanceName}.${selectListMethodName}(${voInstanceName});
		model.addAttribute("items", items);
		
		int totCnt = ${serviceInstanceName}.${selectListTotCntMethodName}(${voInstanceName});
		paginationInfo.setTotalRecordCount(totCnt);
		model.addAttribute("paginationInfo", paginationInfo);
		
		return "${listView}";
	} 

	@RequestMapping("${addViewPath}")
	public String ${addViewMethodName}(@ModelAttribute("searchVO") ${voClassName} ${voInstanceName}, Model model) throws Exception {
##		model.addAttribute("${voInstanceName}", new ${voClassName}());
		return "${registerView}";
	}

	@RequestMapping("${addPath}")
	public String ${addMethodName}(@ModelAttribute("searchVO") ${voClassName} ${voInstanceName}, SessionStatus status) throws Exception {
		${serviceInstanceName}.${insertMethodName}(${voInstanceName});
		status.setComplete();
		return "forward:${listPath}";
	}

	@RequestMapping("${updateViewPath}")
	public String ${updateViewMethodName}(@ModelAttribute("searchVO") ${voClassName} ${voInstanceName}, Model model) throws Exception {
		model.addAttribute("${voInstanceName}", ${serviceInstanceName}.${selectMethodName}(${voInstanceName}));
		return "${registerView}";
	}

	@RequestMapping("${updatePath}")
	public String ${updateMethodName}(${voClassName} ${voInstanceName}, SessionStatus status) throws Exception {
		${serviceInstanceName}.${updateMethodName}(${voInstanceName});
		status.setComplete();
		return "forward:${listPath}";
	}

	@RequestMapping("${deletePath}")
	public String ${deleteMethodName}(${voClassName} ${voInstanceName}, SessionStatus status) throws Exception {
		${serviceInstanceName}.${deleteMethodName}(${voInstanceName});
		status.setComplete();
		return "forward:${listPath}";
	}

}
