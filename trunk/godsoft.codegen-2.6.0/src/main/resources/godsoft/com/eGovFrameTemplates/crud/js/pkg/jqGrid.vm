##
#set($D='$')
#set($Q='"')
#set($voPackage="${voPackage}")
#set($voClassName="${model.entity.pcName}VO")
#set($defaultVoClassName="${model.entity.pcName}DefaultVO")
#set($voInstanceName="${model.entity.ccName}VO")
##
##
#set( $topLevelPath = "$model.topLevelPackage.replaceAll('\.', '/')" )
#set( $prefixPath = "/$topLevelPath/$model.middleLevelPackage" )
##
#set($listPath="$prefixPath/${model.entity.packageName}/select${model.entity.pcName}List.do")
#set($listPathJson="$prefixPath/${model.entity.packageName}/select${model.entity.pcName}List.json")
#set($addViewPath="$prefixPath/${model.entity.packageName}/add${model.entity.pcName}View.do")
#set($addPath="$prefixPath/${model.entity.packageName}/add${model.entity.pcName}.do")
#set($selectPath="$prefixPath/${model.entity.packageName}/select${model.entity.pcName}.do")
#set($updatePath="$prefixPath/${model.entity.packageName}/update${model.entity.pcName}.do")
#set($updateViewPath="$prefixPath/${model.entity.packageName}/update${model.entity.pcName}View.do")
#set($deletePath="$prefixPath/${model.entity.packageName}/delete${model.entity.pcName}.do")
##
#set($listPageName="${model.entity.pcName}List.jsp")
##
#set($selectFunctionName="fncSelect${model.entity.pcName}")
#set($addViewFunctionName="fncAdd${model.entity.pcName}View")
##
#set( $title = "$model.entity.tableComments 목록" )
##
#set( $topLevelDash = $model.topLevelPackage.replaceAll('\.', '-') )
#set( $middleLevelDash = $model.middleLevelPackage.replaceAll('\.', '-') )
#set( $prefixDash = "${topLevelDash}-${middleLevelDash}" )
#set( $listId = "${prefixDash}-${model.entity.packageName}-${model.entity.pcName}List")
#set( $listClass = "${topLevelDash}-list")
##
#set( $formId = "${listId}-form")
##
#set($params="")
#set($i=0)
#if(${model.primaryKeys} == [])
#set($params="${model.attributes.get(0).ccName}")
#else
#foreach($attribute in $model.primaryKeys)
#if($i == 0)
#set($params="${attribute.ccName}")
#else
#set($params="$params, ${attribute.ccName}")
#end
#set($i=$i+1)
#end
#end
##
#set( $colNames = "" )
#set( $colModel = "" )
#foreach($attribute in $model.attributes)
	#set( $colNames = "$colNames, '$attribute.columnComments'" )
	#set( $colModel = "$colModel, {name:'$attribute.ccName',index:'$attribute.lcName'}" )
#end
##
/********************************************************
파일명 : /js$prefixPath/$model.entity.packageName/${model.entity.pcName}.js
설 명 : $model.entity.tableComments JavaScript
수정일 수정자 Version Function 명
------- -------- ---------- --------------
${createDate} ${author} 1.0 최초 생성
*********************************************************/

/* 목록(List) 시작 */
/************************************************************************
함수명 : fn_egov_check_period
설 명 : 행정달력으로 받은 날짜값이 정상적인 허용범위에 속한
값인지를 검사 검색시작일과 끝나는 일자의 크기 비교
인 자 : sdt( 시작일 control명) edt( 시작일 control명)
사용법 : checkPeriodBeforeSearch(input1, input2)
텍스트 입력값은 반드시 10자리(2004-05-01)로 구성되어야 한다.
상황에 따라 구분자(sep)는 '-'(2004-05-01) or '.'(2004.05.01)
작성일 : 2009-02-01
작성자 : 각팀명(예. 공통서비스 개발팀) 홍길동
수정일 수정자 수정내용
------ ------ -------------------
2009.02.01 길동이 윤년 처리 추가
************************************************************************/
function fn_egov_jqGrid() {
	var url = '';
	url += godsoft.com.cmm.path.webapp;
	url += '$listPathJson';

	jQuery("#list2").jqGrid({
		url : url,
		// height : 150,
		page : 1,
		rowNum : 2,
		// rowTotal : null,
		// records : 0,
		pager : "#pager2",
		// pgbuttons : true,
		// pginput : true,
		colModel : [
#set( $i = 0)
#foreach( $attribute in $model.attributes )
#if( $i == 0 )
			{name:'$attribute.ccName',index:'$attribute.lcName'}
#else
			, {name:'$attribute.ccName',index:'$attribute.lcName'}
#end
#set( $i = $i + 1 )
#end
		],
		rowList : [10, 20, 30],
		colNames : [
#set( $i = 0)
#foreach( $attribute in $model.attributes )
#if( $i == 0 )
			'$attribute.columnComments'
#else
			, '$attribute.columnComments'
#end
#set( $i = $i + 1 )
#end
		],
		sortorder : "desc",
		sortname : "id",
		datatype : "json",
		// mtype : "GET",
		// altRows : false,
		// selarrrow : [],
		// savedRow : [],
		// shrinkToFit : true,
		// xmlReader : {},
		jsonReader : {
			root: "items",
			page: "paginationInfo.pageIndex",
			total: "paginationInfo.totalPageCount",
			records: "paginationInfo.totalRecordCount",
			// repeatitems: true,
			// cell: "cell",
			// id: "id",
			// userdata: "userdata",
			// subgrid: {root:"rows", repeatitems: true, cell:"cell"}
		},
		// subGrid : false,
		// subGridModel : [],
		// reccount : 0,
		// lastpage : 0,
		// lastsort : 0,
		// selrow : null,
		// beforeSelectRow : null,
		// onSelectRow : null,
		// onSortCol : null,
		// ondblClickRow : null,
		// onRightClickRow : null,
		// onPaging : null,
		// onSelectAll : null,
		// onInitGrid : null,
		// loadComplete : null,
		// gridComplete : null,
		// loadError : null,
		// loadBeforeSend : null,
		// afterInsertRow : null,
		// beforeRequest : null,
		// beforeProcessing : null,
		// onHeaderClick : null,
		viewrecords : true,
		// loadonce : false,
		// multiselect : false,
		// multikey : false,
		// editurl : null,
		// search : false,
		caption : "$model.entity.tableComments 목록",
		// hidegrid : true,
		// hiddengrid : false,
		// postData : {},
		// userData : {},
		// treeGrid : false,
		// treeGridModel : 'nested',
		// treeReader : {},
		// treeANode : -1,
		// ExpandColumn : null,
		// tree_root_level : 0,
		prmNames : {
			page : "pageIndex",
			rows : "pageSize",
			sort : "sidx",
			order : "sord",
			search : "_search",
			nd : "nd",
			id : "id",
			oper : "oper",
			editoper : "edit",
			addoper : "add",
			deloper : "del",
			subgridid : "id",
			npage : null,
			totalrows : "totalrows"
		},
		// forceFit : false,
		// gridstate : "visible",
		// cellEdit : false,
		// cellsubmit : "remote",
		// nv : 0,
		// loadui : "enable",
		// toolbar : [ false, "" ],
		// scroll : false,
		// multiboxonly : false,
		// deselectAfterSort : true,
		// scrollrows : false,
		// autowidth : false,
		// scrollOffset : 18,
		// cellLayout : 5,
		// subGridWidth : 20,
		// multiselectWidth : 20,
		// gridview : false,
		// rownumWidth : 25,
		// rownumbers : false,
		// pagerpos : 'center',
		// recordpos : 'right',
		// footerrow : false,
		// userDataOnFooter : false,
		// hoverrows : true,
		// altclass : 'ui-priority-secondary',
		// viewsortcols : [ false, 'vertical', true ],
		// resizeclass : '',
		// autoencode : false,
		// remapColumns : [],
		// ajaxGridOptions : {},
		// direction : "ltr",
		// toppager : false,
		// headertitles : false,
		// scrollTimeout : 40,
		// data : [],
		// _index : {},
		// grouping : false,
		// groupingView : {
			// groupField : [],
			// groupOrder : [],
			// groupText : [],
			// groupColumnShow : [],
			// groupSummary : [],
			// showSummaryOnHide : false,
			// sortitems : [],
			// sortnames : [],
			// summary : [],
			// summaryval : [],
			// plusicon : 'ui-icon-circlesmall-plus',
			// minusicon : 'ui-icon-circlesmall-minus',
			// displayField : []
		// },
		// ignoreCase : false,
		// cmTemplate : {},
		// idPrefix : "",
		// multiSort : false,
	});
	
	jQuery("#list2").jqGrid('navGrid','#pager2',{edit:false,add:false,del:false});
}

$( document ).ready(function() {
	fn_egov_jqGrid();
});
