##
#set($D='$')
#set($Q='"')
#set($voPackage="${voPackage}")
#set($voClassName="${model.entity.pcName}VO")
#set($defaultVoClassName="${model.entity.pcName}DefaultVO")
#set($voInstanceName="${model.entity.ccName}VO")
##
##
#set( $topLevelPath = "$model.topLevelPackage.replaceAll('\.', '/')" )
#set( $prefixPath = "/$topLevelPath/$model.middleLevelPackage" )
##
#set($listPath="$prefixPath/${model.entity.packageName}/select${model.entity.pcName}List.do")
#set($listPathJson="$prefixPath/${model.entity.packageName}/select${model.entity.pcName}List.json")
#set( $listJqGridPathJson = "$prefixPath/${model.entity.packageName}/select${model.entity.pcName}ListJqGrid.json" )
#set($addViewPath="$prefixPath/${model.entity.packageName}/add${model.entity.pcName}View.do")
#set($addPath="$prefixPath/${model.entity.packageName}/add${model.entity.pcName}.do")
#set($selectPath="$prefixPath/${model.entity.packageName}/select${model.entity.pcName}.do")
#set($updatePath="$prefixPath/${model.entity.packageName}/update${model.entity.pcName}.do")
#set($updateViewPath="$prefixPath/${model.entity.packageName}/update${model.entity.pcName}View.do")
#set($deletePath="$prefixPath/${model.entity.packageName}/delete${model.entity.pcName}.do")
##
#set( $multiPath = "$prefixPath/$model.entity.packageName/multi${model.entity.pcName}.do")
#set( $multiPathJson = "$prefixPath/$model.entity.packageName/multi${model.entity.pcName}.json")
##
#set($listPageName="${model.entity.pcName}List.jsp")
##
#set($selectFunctionName="fncSelect${model.entity.pcName}")
#set($addViewFunctionName="fncAdd${model.entity.pcName}View")
##
#set( $title = "$model.entity.tableComments 목록" )
##
#set( $topLevelDash = $model.topLevelPackage.replaceAll('\.', '-') )
#set( $middleLevelDash = $model.middleLevelPackage.replaceAll('\.', '-') )
#set( $prefixDash = "${topLevelDash}-${middleLevelDash}" )
#set( $listId = "${prefixDash}-${model.entity.packageName}-${model.entity.pcName}List")
#set( $listClass = "${topLevelDash}-list")
##
#set( $formId = "${listId}-form")
##
#set($params="")
#set($i=0)
#if(${model.primaryKeys} == [])
#set($params="${model.attributes.get(0).ccName}")
#else
#foreach($attribute in $model.primaryKeys)
#if($i == 0)
#set($params="${attribute.ccName}")
#else
#set($params="$params, ${attribute.ccName}")
#end
#set($i=$i+1)
#end
#end
##
#set( $colNames = "" )
#set( $colModel = "" )
#foreach($attribute in $model.attributes)
	#set( $colNames = "$colNames, '$attribute.columnComments'" )
	#set( $colModel = "$colModel, {name:'$attribute.ccName',index:'$attribute.lcName'}" )
#end
##
/*
파일명 : /js$prefixPath/$model.entity.packageName/${model.entity.pcName}.js
설 명 : $model.entity.tableComments JavaScript
수정일 수정자 Version Function 명
------- -------- ---------- --------------
${createDate} ${author} 1.0 최초 생성
 */

/**
 * <pre>
 * 함수명 : fn_egov_jqGrid
 * 설 명 : $model.entity.tableComments jqGrid 목록(List)
 * 인 자 :
 * 사용법 : fn_egov_jqGrid();
 * 작성일 : ${createDate}
 * 작성자 : ${author}
 * 수정일 수정자 수정내용
 * ------ ------ -------------------
 * ${createDate} ${author} 최초 생성
 * </pre>
 */
function fn_egov_jqGrid() {
	var url = '';
	url += godsoft.com.cmm.path.webapp;
	url += '$listJqGridPathJson';

	var editurl = '';
	editurl += godsoft.com.cmm.path.webapp;
	editurl += '$multiPathJson';

	jQuery("#list2").jqGrid({
		url : url,
		// height : 150,
		page : 1,
		rowNum : 3,
		// rowTotal : null,
		// records : 0,
		pager : "#pager2",
		// pgbuttons : true,
		// pginput : true,
		colModel : [

#set( $i = 0)
#foreach( $attribute in $model.attributes )
#if( $i == 0 )
			{
				name : '$attribute.ccName',
				index : '$attribute.lcName',
				editable : true
			}
#else
#if( $attribute.lcName == "description" )
			, {
				name : '$attribute.ccName',
				index : '$attribute.lcName',
				editable : true,
				edittype : 'textarea',
				editoptions : {
					// rows : '2',
					// cols : '10'
					// style : 'width: 640px; height: 480px;'
					style : 'width: 640px; height: 200px;'
				}
			}
#elseif( $attribute.lcName == "use_yn" )
			, {
				name : '$attribute.ccName',
				index : '$attribute.lcName',
				editable : true,
				edittype : 'checkbox',
				editoptions : {
					value : 'Y:N'
				}
			}
#else
			, {
				name : '$attribute.ccName',
				index : '$attribute.lcName',
				editable : true
			}
#end
#end
#set( $i = $i + 1 )
#end

		],
		rowList : [1, 2, 3],
		colNames : [
#set( $i = 0)
#foreach( $attribute in $model.attributes )
#if( $i == 0 )
			'$attribute.columnComments'
#else
			, '$attribute.columnComments'
#end
#set( $i = $i + 1 )
#end
		],
		sortorder : "desc",
		sortname : "id",
		datatype : "json",
		// mtype : "GET",
		// altRows : false,
		// selarrrow : [],
		// savedRow : [],
		// shrinkToFit : true,
		// xmlReader : {},
		// jsonReader : {
			// root: "items",
			// page: "paginationInfo.pageIndex",
			// total: "paginationInfo.totalPageCount",
			// records: "paginationInfo.totalRecordCount",
			// repeatitems: true,
			// cell: "cell",
			// id: "id",
			// userdata: "userdata",
			// subgrid: {root:"rows", repeatitems: true, cell:"cell"}
		// },
		// subGrid : false,
		// subGridModel : [],
		// reccount : 0,
		// lastpage : 0,
		// lastsort : 0,
		// selrow : null,
		// beforeSelectRow : null,
		// onSelectRow : null,
		// onSortCol : null,
		// ondblClickRow : null,
		// onRightClickRow : null,
		// onPaging : null,
		// onSelectAll : null,
		// onInitGrid : null,
		// loadComplete : null,
		// gridComplete : null,
		// loadError : null,
		// loadBeforeSend : null,
		// afterInsertRow : null,
		// beforeRequest : null,
		// beforeProcessing : null,
		// onHeaderClick : null,
		viewrecords : true,
		// loadonce : false,
		multiselect : true,
		// multikey : false,
		editurl : editurl,
		// search : false,
		caption : "$model.entity.tableComments 목록",
		// hidegrid : true,
		// hiddengrid : false,
		// postData : {},
		// userData : {},
		// treeGrid : false,
		// treeGridModel : 'nested',
		// treeReader : {},
		// treeANode : -1,
		// ExpandColumn : null,
		// tree_root_level : 0,
		// prmNames : {
			// page : "pageIndex",
			// rows : "pageUnit",
			// sort : "sidx",
			// order : "sord",
			// search : "_search",
			// nd : "nd",
			// id : "id",
			// oper : "oper",
			// editoper : "edit",
			// addoper : "add",
			// deloper : "del",
			// subgridid : "id",
			// npage : null,
			// totalrows : "totalrows"
		// },
		// forceFit : false,
		// gridstate : "visible",
		// cellEdit : false,
		// cellsubmit : "remote",
		// nv : 0,
		// loadui : "enable",
		// toolbar : [ false, "" ],
		// scroll : false,
		// multiboxonly : false,
		// deselectAfterSort : true,
		// scrollrows : false,
		// autowidth : false,
		// scrollOffset : 18,
		// cellLayout : 5,
		// subGridWidth : 20,
		// multiselectWidth : 20,
		// gridview : false,
		// rownumWidth : 25,
		// rownumbers : false,
		// pagerpos : 'center',
		// recordpos : 'right',
		// footerrow : false,
		// userDataOnFooter : false,
		// hoverrows : true,
		// altclass : 'ui-priority-secondary',
		// viewsortcols : [ false, 'vertical', true ],
		// resizeclass : '',
		// autoencode : false,
		// remapColumns : [],
		// ajaxGridOptions : {},
		// direction : "ltr",
		// toppager : false,
		// headertitles : false,
		// scrollTimeout : 40,
		// data : [],
		// _index : {},
		// grouping : false,
		// groupingView : {
			// groupField : [],
			// groupOrder : [],
			// groupText : [],
			// groupColumnShow : [],
			// groupSummary : [],
			// showSummaryOnHide : false,
			// sortitems : [],
			// sortnames : [],
			// summary : [],
			// summaryval : [],
			// plusicon : 'ui-icon-circlesmall-plus',
			// minusicon : 'ui-icon-circlesmall-minus',
			// displayField : []
		// },
		// ignoreCase : false,
		// cmTemplate : {},
		// idPrefix : "",
		// multiSort : false,
	});

	jQuery("#list2").jqGrid('navGrid', '#pager2', {
		edit : true,
		editicon : "ui-icon-pencil",
		add : true,
		addicon : "ui-icon-plus",
		del : true,
		delicon : "ui-icon-trash",
		search : true,
		searchicon : "ui-icon-search",
		refresh : true,
		refreshicon : "ui-icon-refresh",
		refreshstate : 'firstpage',
		view : true,
		viewicon : "ui-icon-document",
		position : "left",
		closeOnEscape : true,
		beforeRefresh : null,
		afterRefresh : null,
		cloneToTop : false,
		alertwidth : 200,
		alertheight : 'auto',
		alerttop : null,
		alertleft : null,
		alertzIndex : null
	}, {
		top : 0,
		left : 0,
		// width : $(window).width() - 100,
		width : 'auto',
		datawidth : 'auto',
		height : 'auto',
		dataheight : 'auto',
		modal : false,
		overlay : 30,
		drag : true,
		resize : true,
		url : null,
		mtype : "POST",
		clearAfterAdd : true,
		closeAfterEdit : false,
		reloadAfterSubmit : true,
		onInitializeForm : null,
		beforeInitData : null,
		beforeShowForm : null,
		afterShowForm : null,
		beforeSubmit : null,
		afterSubmit : null,
		onclickSubmit : null,
		afterComplete : null,
		onclickPgButtons : null,
		afterclickPgButtons : null,
		editData : {},
		recreateForm : false,
		jqModal : true,
		closeOnEscape : false,
		addedrow : "first",
		topinfo : '',
		bottominfo : '',
		saveicon : [],
		closeicon : [],
		savekey : [ false, 13 ],
		navkeys : [ false, 38, 40 ],
		checkOnSubmit : false,
		checkOnUpdate : false,
		_savedData : {},
		processing : false,
		onClose : null,
		ajaxEditOptions : {},
		serializeEditData : null,
		viewPagerButtons : true,
		overlayClass : 'ui-widget-overlay'
	}, {}, {}, {}, {
		top : 0,
		left : 0,
		width : 640,
		datawidth : 'auto',
		height : 'auto',
		dataheight : 'auto',
		modal : false,
		overlay : 30,
		drag : true,
		resize : true,
		jqModal : true,
		closeOnEscape : false,
		labelswidth : '30%',
		closeicon : [],
		navkeys : [ false, 38, 40 ],
		onClose : null,
		beforeShowForm : null,
		beforeInitData : null,
		viewPagerButtons : true,
		recreateForm : false
	});

	jQuery("#list2").jqGrid('setGroupHeaders', {
		useColSpanStyle : false,
		groupHeaders : [ {
			startColumnName : 'name',
			numberOfColumns : 2,
			titleText : '<em>Price</em>'
		}, {
			startColumnName : 'useYn',
			numberOfColumns : 2,
			titleText : 'Shiping'
		} ]
	});

	var content = '';
	// content += '<tr class="ui-jqgrid-labels
	// jqg-second-row-header" role="rowheader">';
	content += '<tr class="ui-jqgrid-labels';
	content += ' jqg-second-row-header"';
	content += ' role="rowheader">';
	// content += '<th colspan="5" style="height: 22px;
	// border-top: 0px none;" class="ui-state-default
	// ui-th-column-header ui-th-ltr"
	// role="columnheader"><em>Price</em> Shiping</th>';
	content += '<th colspan="6"';
	content += ' style="height: 22px; border-top: 0px none;"';
	// content += ' class="ui-state-default ui-th-column-header
	// ui-th-ltr"';
	content += ' class="';
	content += 'ui-state-default';
	content += ' ui-th-column-header';
	content += ' ui-th-ltr';
	content += '"';
	content += ' role="columnheader">';
	content += ' <em>Price</em>';
	content += ' Shiping';
	content += '</th>';
	content += '</tr>';

	$('#gview_list2 .jqg-first-row-header').after(content);
	
	// hideCol
#foreach( $attribute in $model.attributes )
	// jQuery("#list2").jqGrid('hideCol', '$attribute.ccName'); // $attribute.columnComments
#end
}

$(document).ready(function() {
	fn_egov_jqGrid();
});
